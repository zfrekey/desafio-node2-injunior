// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  photo    String?

  posts Post[]

  @@map("users")
}

model Post {
  id         String   @id @default(uuid())
  title      String
  content    String
  created_at DateTime

  userId   String
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes    Like[]
  comments Comment[]

  @@map("posts")
}

model Like {
  id         String   @id @default(uuid())
  created_at DateTime

  postId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("likes")
}

model Comment {
  id         String   @id @default(uuid())
  content    String
  created_at DateTime

  postId String
  post   Post           @relation(fields: [postId], references: [id], onDelete: Cascade)
  likes  Comment_Like[]

  @@map("comments")
}

model Comment_Like {
  id         String   @id @default(uuid())
  created_at DateTime

  commentId String
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)

  @@map("comment_likes")
}
